/* Generated with https://github.com/musewick/stylus-flexbox-grid */{"version":3,"sources":["grid.styl"],"names":[],"mappings":"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","file":"flexbox-grid.min.css","sourcesContent":["@import '../config.styl'\n\nif grid.precision is 0\n  pr = 10\nelse\n  pr = grid.precision\n\ncellClassName = 'cell'\n\nvalue-calc(value)\n  u = unit(value);\n  if body-font-size is not 0\n    if (u is 'rem') {\n      return round(unit(value, u), pr);\n    } else {\n      return round(unit(value / body-font-size, 'rem'), pr);\n    }\n  else\n    if (u is 'px') {\n      return unit(value, u);\n    } else {\n      return unit(value, 'px');\n    }\n\nbasis-calc(i, cols)\n  r = 100 * (i / cols)\n  return s('%s%', round(r, pr))\n\ncolumn-gutter(g)\n  margin: s(\"0 %s\", value-calc(g / 2))\n\ngutters(r, g)\n  margin: s(\"%s %s\", value-calc(r / 2), value-calc(g / 2))\n\nequal-gutters(g)\n  margin: s(\"%s\", value-calc(g / 2))\n\nrow-gutter(r)\n  margin: s(\"%s 0\", value-calc(r / 2))\n\n\ngrid-props(direction = 'row', cells-align = 'top', justify = '')\n  display flex\n  flex-wrap wrap\n  if cells-align is 'top'\n    align-items flex-start\n  if cells-align is 'bottom'\n    align-items flex-end\n  if cells-align is 'center'\n    align-items center\n  if cells-align is 'stretch'\n    align-items stretch\n  if direction is 'row'\n    flex-direction row\n  if direction is 'row-reverse'\n    flex-direction row-reverse\n  if direction is 'column'\n    flex-direction column\n  if direction is 'column-reverse'\n    flex-direction column-reverse\n  if justify is 'center'\n    justify-content center\n  if justify is 'start'\n    justify-content flex-start\n  if justify is 'end'\n    justify-content flex-end\n\ncell(i, cols = grid.columns, align = '', g = grid.gutters.column, r = grid.gutters.row)\n  if g != 0\n    flex-basis: s('calc(%s - %s)', basis-calc(i, cols), value-calc(g))\n  else\n    flex-basis: basis-calc(i, cols)\n      \n  if r == g\n    equal-gutters(g)\n  else if g != 0 && r == 0\n    column-gutter(g)\n  else if r != 0 && g == 0\n    row-gutter(r)\n  else\n    gutters(r, g)   \n\n  if align is 'top'\n    align-self flex-start\n  if align is 'bottom'\n    align-self flex-end\n  if align is 'center'\n    align-self center\n\ncell-offset(i = 1, cols = grid.columns, g = grid.gutters.column)\n  if g is not 0\n    margin-left: s('calc(%s + %s)', basis-calc(i, cols), value-calc(g) / 2) !important\n  else\n    margin-left: basis-calc(i, cols) !important\n\ncenter(value, pad = null)\n  margin-left auto\n  margin-right auto\n  width 100%\n  u = unit(value)\n  if (u is 'rem' or u is '%')\n    max-width round(unit(value, u),pr)\n  else\n    max-width value-calc(value)\n  if (pad is null)\n    return\n  else\n    p = unit(pad)\n    if (p is 'rem' or p is '%')\n      padding-left  round(unit(pad, p), pr)\n      padding-right  round(unit(pad, p), pr)\n    else\n      padding-left value-calc(pad)\n      padding-right value-calc(pad)\n\nstack()\n  cell(1, 1)\n\n\ngrid-cell-classes-generator(cols = grid.columns, g = grid.gutters.column, cellClass = cellClassName)\n  for key, value in grid.breakpoints\n    @media screen and (min-width: value-calc(value))\n      for i in range(1, cols, 1)\n        .{cellClass}-{key}-{i}\n          cell(i, cols, g)\n        .{cellClass}-offset-{key}-{i}\n          cell-offset(i, cols, g)\n\ngrid-classes-generator(cols = grid.columns, g = grid.gutters.column, gridClass = grid.name, cellClass = cellClassName)\n  for key, value in grid.breakpoints\n    @media screen and (min-width: value-calc(value))\n      for i in range(1, cols, 1)\n        .{gridClass}-{key}-{i} > [class~={cellClass}]\n          cell(i, cols, g)\n\n// grid classes\n\n.{grid.name}-top\n  grid-props(cells-align: 'top')\n\n.{grid.name}-bottom\n  grid-props(cells-align: 'bottom')\n\n.{grid.name}-center\n  grid-props(cells-align: 'center')\n\n.{grid.name}-stretch\n  grid-props(cells-align: 'stretch')\n\n.{grid.name}-justify-center\n  justify-content center\n\n.{grid.name}-justify-start\n  justify-content flex-start\n\n.{grid.name}-justify-end\n  justify-content flex-end\n\n.{grid.name}-row\n  grid-props(direction: 'row')\n\n.{grid.name}-row-reverse\n  grid-props(direction: 'row-reverse')\n\n.{grid.name}-column\n  grid-props(direction: 'column')\n\n.{grid.name}-column-reverse\n  grid-props(direction: 'column-reverse')\n\ngrid-classes-generator()\n\n.{cellClassName}-top\n  align-self flex-start\n\n.{cellClassName}-bottom\n  align-self flex-end\n\n.{cellClassName}-center\n  align-self center\n\ngrid-cell-classes-generator()"]}